#
# Copyright 2020-Present Okta, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Java GraalVM CI

on:
  push:
    branches: # build any changes to master
      - master
    tags: # all tags
      - '*'
  pull_request: # build all PRs

env:
  graalvm_version: '22.3.0'

jobs:
  build:
    name: GraalVM - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    env:
      REPO_SLUG: ${{ github.repository }}
      BRANCH: ${{ github.head_ref }}
      RUN_IT: true
      OKTA_ITS_TIMEOUT: PT45s
    steps:
      - uses: actions/checkout@v4

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1.1.5
        with:
          version: '${{ env.graalvm_version }}'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Test
        run: ./src/ci/gh-build.sh

      - name: Archive Binary
        uses: actions/upload-artifact@v4
        with:
          name: okta-cli-${{ matrix.os }}-x86_64
          path: cli/target/okta

  build-windows:
    name: GraalVM - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]
    env:
      REPO_SLUG: ${{ github.repository }}
      BRANCH: ${{ github.head_ref }}
      RUN_IT: true

    steps:
      - uses: actions/checkout@v4
      - uses: ilammy/msvc-dev-cmd@v1.12.1
      - uses: microsoft/setup-msbuild@v1.3.1

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1.1.5
        with:
          version: '${{ env.graalvm_version }}'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Pagefile
        uses: al-cheb/configure-pagefile-action@v1.3

      - name: Setup Pagefile
        run: |
          (Get-CimInstance Win32_PageFileUsage).AllocatedBaseSize

      - name: mvnw --version
        run: mvnw --version
        shell: cmd

      - name: Maven Resolve
        run: |
          mvnw -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -V -Pci dependency:resolve-plugins
        shell: cmd

      - name: Build and Test
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
          mvnw -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -V install -Pci -e
        shell: cmd

      - name: Archive Binary
        uses: actions/upload-artifact@v4
        with:
          name: okta-cli-${{ matrix.os }}-x86_64.exe
          path: cli/target/okta.exe
