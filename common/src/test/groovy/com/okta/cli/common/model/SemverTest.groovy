/*
 * Copyright 2020-Present Okta, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.okta.cli.common.model

import org.testng.annotations.DataProvider
import org.testng.annotations.Test

import static org.hamcrest.MatcherAssert.assertThat
import static org.hamcrest.Matchers.equalTo

class SemverTest {

    @Test
    void parseTest() {
        // equals method generated by lombok
        assertThat Semver.parse("1"), equalTo(new Semver("1", 1, null, null, null, true))
        assertThat Semver.parse("1.2"), equalTo(new Semver("1.2", 1, 2, null, null, true))
        assertThat Semver.parse("1.0.3"), equalTo(new Semver("1.0.3", 1, 0, 3, null, true))
        assertThat Semver.parse("1.0.3-SNAPSHOT"), equalTo(new Semver("1.0.3-SNAPSHOT", 1, 0, 3, "SNAPSHOT", false))
        assertThat Semver.parse("1.0.3-SNAPSHOT-foo"), equalTo(new Semver("1.0.3-SNAPSHOT-foo", 1, 0, 3, "SNAPSHOT-foo", false))
        assertThat Semver.parse("0.10.14-qualifier-goes-here"), equalTo(new Semver("0.10.14-qualifier-goes-here", 0, 10, 14, "qualifier-goes-here", true))

        assertThat Semver.parse("a.b.c"), equalTo(new Semver("a.b.c", null, null, null, null, true))
    }

    @Test(dataProvider = "greaterThan")
    void greaterThanTest(String versionA, String versionB) {
        assertGreaterThan versionA, versionB
    }

    @Test(dataProvider = "lessThanOrEqual")
    void lessThanOrEqualDataTest(String versionA, String versionB) {
        assertLessThanOrEqual versionA, versionB
    }

    private void assertLessThanOrEqual(String a, String b) {
        assertThat "Expected version `${a}` to be less than or equal toversion '${b}'", !Semver.parse(a).isGreaterThan(b)
    }

    private void assertGreaterThan(String a, String b) {
        assertThat "Expected version `${a}` to be greater than version '${b}'", Semver.parse(a).isGreaterThan(b)
    }

    @DataProvider(name = "greaterThan")
    Object[][] greaterThanData() {
        return [
                ["1.2.3", "1.2.2"],
                ["1.2.3", "1.2.3-SNAPSHOT"],
                ["1.2.3", "0.2.2"],
                ["2", "1.0"],
                ["2.0", "1.0.0"],
                ["10.0", "1.0.0"],
                ["1.2.3", "0.2.2"],
        ]
    }

    @DataProvider(name = "lessThanOrEqual")
    Object[][] lessThanOrEqualData() {
        return [
                ["1.2.2", "1.2.3"],
                ["1.0.0", "2"],
                ["1.10.0", "2.2"],
                ["1.2.3-SNAPSHOT", "1.2.3"],
                ["0.2.2", "1.2.3"],
        ]
    }
}
