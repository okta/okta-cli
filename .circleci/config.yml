version: 2.1

orbs:
  general-platform-helpers: okta/general-platform-helpers@1.9
  python: circleci/python@2.1.1
  aws-cli: circleci/aws-cli@5.1

jobs:
  # âœ… NEW JOB: This job builds the native executable using GraalVM
  build-native-image:
    docker:
      # Use a specific GraalVM image that includes the native-image tool
      - image: cimg/graalvm:22.3.2-java17
    steps:
      - checkout
      - run:
          name: Build Native Executable with GraalVM
          # The -Pnative flag is a common convention to activate the native-image profile in pom.xml
          command: mvn clean package -Pnative -DskipTests

  snyk-scan:
    docker:
      - image: cimg/openjdk:21.0.2-node
    steps:
      - checkout
      - run: mvn clean install -Pci -Dlicense.skip=true -Dmaven.test.skip.exec=true -DskipITs
      - general-platform-helpers/step-run-snyk-monitor:
          scan-all-projects: false
          skip-unresolved: false
          run-on-non-main: true
          additional-arguments: "--maven-aggregate-project"

  reversing-labs:
    docker:
      - image: cimg/openjdk:17.0.7
    steps:
      - checkout
      - run:
          name: Download Reverse Labs Scanner
          command: |
            curl https://dso-resources.oktasecurity.com/scanner \
              -H "x-api-key: $DSO_RLSECURE_TOKEN" \
              --output rl_wrapper-0.0.2+35ababa-py3-none-any.whl
      - run:
          name: Install RL Wrapper
          command: |
            pip3 install ./rl_wrapper-0.0.2+35ababa-py3-none-any.whl
      - aws-cli/setup:
          profile_name: default
          role_arn: $AWS_ARN
          region: us-east-1
      - run: >-
          eval "$(aws configure export-credentials --profile default --format env)" 2> /dev/null
      - run:
          name: Run Reversing Labs Wrapper Scanner
          command: |
            rl-wrapper \
              --artifact ${CIRCLE_WORKING_DIRECTORY/#\~/$HOME} \
              --name $CIRCLE_PROJECT_REPONAME\
              --version $CIRCLE_SHA1\
              --repository $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME \
              --commit $CIRCLE_SHA1 \
              --build-env "circleci" \
              --suppress_output

workflows:
  # This workflow now builds the native image first, then runs scans
  build-and-scan:
    jobs:
      # 1. Build the native image first
      - build-native-image:
          context:
            - static-analysis # Assuming build might need secrets too

      # 2. Run Snyk scan after the build
      - snyk-scan:
          name: execute-snyk
          context:
            - static-analysis
          requires:
            - build-native-image # This job depends on the build succeeding

      # 3. Run Semgrep scan after the build
      - general-platform-helpers/job-semgrep-scan:
          name: "Scan with Semgrep"
          context:
            - static-analysis
          requires:
            - build-native-image # This job also depends on the build succeeding

  "Malware Scanner":
    jobs:
      - reversing-labs:
          context:
            - static-analysis